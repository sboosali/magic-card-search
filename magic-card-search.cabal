name:                magic-card-search
version:             0.0.0
synopsis:            TODO
description:         
 .
 TODO
 . 
 see the source of "Card.Example" for an example.
 .
 transitive dependencies:
 .
 <<magic-card-search.png>>

homepage:            http://github.com/sboosali/magic-card-search#readme
license:             BSD3
license-file:        LICENSE
author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
copyright:           2016 Spiros Boosalis
category:            TODO
build-type:          Simple
cabal-version:       >=1.10

-- PVP
-- https://wiki.haskell.org/Package_versioning_policy
-- "A.B is known as the major version number, and C the minor version number."

extra-source-files:
  README.md
  .gitignore
  .travis.yml
  HLint.hs
  stack.yaml


data-files:
  data/AllCards.json 
  data/SomeCards.json
  data/NoCards.json

  data/AllSets-x.json
  data/SomeSets-x.json
  data/OneSet-x.json
  data/OneCard-x.json

  data/version-full.json 
  data/SetList.json


source-repository head
  type:     git
  location: https://github.com/sboosali/magic-card-search


library
 hs-source-dirs:      sources
 default-language:    Haskell2010
 ghc-options:
  -Wall
-- disable
  -fno-warn-unticked-promoted-constructors
-- enable
  -fwarn-incomplete-uni-patterns
  -fwarn-incomplete-record-updates
  -fwarn-identities
  -fwarn-missing-fields
  -fwarn-tabs

 default-extensions: AutoDeriveTypeable DeriveDataTypeable DeriveGeneric
                     DeriveFunctor DeriveFoldable DeriveTraversable
                     LambdaCase EmptyCase TypeOperators PostfixOperators
                     ViewPatterns BangPatterns KindSignatures
                     NamedFieldPuns RecordWildCards TupleSections
                     MultiWayIf DoAndIfThenElse EmptyDataDecls
                     MultiParamTypeClasses FlexibleContexts FlexibleInstances
                     TypeFamilies FunctionalDependencies
                     ScopedTypeVariables StandaloneDeriving

 exposed-modules:
                 Card
                 Card.Types
                 Card.Core	
                 Card.Schema 
-- other-modules:
                 Card.Extra
                 Card.Example

 other-modules: 
                 Paths_magic_card_search
-- autogen-modules: 
--                 Paths_magic_card_search

 build-depends:
               base >=4.7 && <5

             , spiros
             , enumerate 

             , deepseq
             , hashable
             , semigroups

--              , transformers
--              , mtl
             , containers
             , unordered-containers
             , bytestring
             , vector 
--              , stm
--              , template-haskell

             , binary
--              , store 
--              , cereal 
             
             , directory
             , time 

             , lens
--              , exceptions
--              , free
--              , bifunctors
--              , profunctors
--              , either
--              , pipes
--              , formatting
--              , servant
--              , Earley
--              , split
--              , interpolatedstring-perl6
--              , wl-pprint-text
             , text
             , aeson
             , lens-aeson
             , show-prettyprint
             
             , async
             -- , async-pool
             , http-client
             , http-client-tls
             
             , vinyl 
             , generic-lens
            --  , composite-aeson
            --  , composite-base 
            --  , aeson-better-errors

executable example-magic-card-search
 hs-source-dirs:      executables
 main-is:             Main.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N
 ghc-options:         -fno-warn-missing-signatures -fno-warn-dodgy-exports -fno-warn-unused-imports

 build-depends:
    base
  , magic-card-search


-- $ stack test doctest
test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , magic-card-search
  , doctest


-- $ stack test unittest
test-suite unittest
 hs-source-dirs:      tests
 main-is:             UnitTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
  Card.Test

 build-depends:
    base
  , magic-card-search
  , hspec 
  , QuickCheck 
  -- , tasty
  -- , tasty-quickcheck


-- $ stack bench
benchmark command
 hs-source-dirs:      benchmarks
 main-is:             Bench.hs
 type:                exitcode-stdio-1.0

 default-language: Haskell2010
 ghc-options:      -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , magic-card-search
  , criterion
  , deepseq

-- -- currently, fltk can't link on Windows with ghci
-- Executable mtg-text-editor
--   Main-Is: texteditor-simple.hs
--   Hs-Source-Dirs: sources
--   Build-Depends:
--     base == 4.*,
--     fltkhs >= 0.5.4.1
--   default-language: Haskell2010
--   ghc-Options: -Wall -threaded
--   if os(windows)
--    ghc-Options: -optl-mwindows
--    ghc-Options: -pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
--   if os(darwin)
--    ghc-Options: "-optl-Wl,-lfltkc"
--   if !os(darwin) && !os(windows)
--     ghc-Options: -pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
